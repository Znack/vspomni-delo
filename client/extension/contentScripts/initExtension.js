// Generated by CoffeeScript 1.6.3
(function() {
  var checkAuth, config, createApp, getCookie, init;

  config = require('../common.js').config;

  require('./services/todo.js');

  require('./controllers/todo.js');

  require('./directives/todoPanel.js');

  require('./directives/contenteditable.js');

  require('./directives/saveOnBlur.js');

  require('./directives/widthConfigurable.js');

  init = function() {
    var app;
    app = {
      working: false,
      site: config.site
    };
    app.service = analytics.getService('chrome_extension');
    app.tracker = app.service.getTracker('UA-54177324-2');
    chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {
      if ("statusChecking" in request) {
        return sendResponse({
          isWorking: app.working
        });
      }
    });
    return getCookie(app);
  };

  getCookie = function(app) {
    return chrome.runtime.sendMessage({
      backendName: "authBackend",
      method: 'getCookie'
    }, function(response) {
      app.cookie = response.cookie;
      return checkAuth(app);
    });
  };

  checkAuth = function(app) {
    return chrome.runtime.sendMessage({
      backendName: "authBackend",
      method: 'checkAuth'
    }, function(response) {
      if (response.user != null) {
        app.user = response.user;
        return createApp(app);
      } else {
        return app.tracker.sendEvent('Error in extension', 'Content script opened by anonymous', '');
      }
    });
  };

  createApp = function(app) {
    return chrome.runtime.sendMessage({
      backendName: "angularBackend",
      method: "getFrameTemplate"
    }, function(response) {
      var body, element;
      element = document.createElement('div');
      element.innerHTML = response.template;
      body = document.getElementsByTagName('body')[0];
      body.appendChild(element);
      angular.module('config', []).value('app', app);
      angular.module('todo', ['ngResource', 'ngCookies', 'ui.bootstrap.datetimepicker', 'config', 'todoPanelDirective', 'saveOnBlurDirective', 'contenteditableDirective', 'widthConfigurableDirective', 'todoServices', 'todoControllers']).config([
        '$compileProvider', function($compileProvider) {
          var currentImgSrcSanitizationWhitelist, newImgSrcSanitizationWhiteList;
          currentImgSrcSanitizationWhitelist = $compileProvider.imgSrcSanitizationWhitelist();
          newImgSrcSanitizationWhiteList = currentImgSrcSanitizationWhitelist.toString().slice(0, -1) + '|chrome-extension:' + currentImgSrcSanitizationWhitelist.toString().slice(-1);
          return $compileProvider.imgSrcSanitizationWhitelist(newImgSrcSanitizationWhiteList);
        }
      ]).run([
        '$cookieStore', '$rootScope', function($cookieStore, $rootScope) {
          $cookieStore.put('sid', app.cookie.value);
          $rootScope.app = app;
          app.working = true;
          return app.tracker.sendAppView('ContentScript');
        }
      ]);
      return angular.bootstrap(element, ['todo']);
    });
  };

  init();

}).call(this);

/*
//@ sourceMappingURL=initExtension.map
*/
