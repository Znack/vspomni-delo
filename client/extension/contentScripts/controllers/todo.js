// Generated by CoffeeScript 1.6.3
(function() {
  var exports, todoControllers, _removeItem, _today;

  todoControllers = angular.module('todoControllers', []);

  _today = new Date();

  _removeItem = function(arr, item) {
    var index;
    index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1);
    }
  };

  todoControllers.controller('TodoListCtrl', [
    '$scope', 'app', 'Todo', function($scope, app, Todo) {
      var _refreshCurrentTodos, _setLoadingStatus;
      $scope.todos = Todo.query();
      _setLoadingStatus = function() {
        var _allNotifications;
        _allNotifications = [];
        $scope.todos.forEach(function(todo) {
          return _allNotifications.push(todo.notifier().add("Загружается..", "loading"));
        });
        return _allNotifications;
      };
      _refreshCurrentTodos = function(showNotifications) {
        var allNotifications;
        if (showNotifications) {
          allNotifications = _setLoadingStatus();
        }
        return Todo.query().$promise.then(function(todos) {
          $scope.todos = todos;
          if (showNotifications) {
            return allNotifications.forEach(function(notification) {
              return notification.remove();
            });
          }
        });
      };
      window.addEventListener('focus', function() {
        app.tracker.sendEvent('Todos', 'Reload all todos', 'after widnow focus');
        return _refreshCurrentTodos(false);
      });
      chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {
        if ("refresh" in request) {
          app.tracker.sendEvent('Todos', 'Reload all todos', 'after refresh order');
          _refreshCurrentTodos(true);
          return true;
        }
      });
      $scope.createDeadLineHandler = function(todo) {
        return function(newDeadLine) {
          todo.deadLine = moment(newDeadLine).utc().format();
          return todo.update();
        };
      };
      $scope.isDeadLineToday = function(todo) {
        var _deadLine;
        _deadLine = new Date(todo.deadLine);
        return _deadLine.setHours(0, 0, 0, 0) === _today.setHours(0, 0, 0, 0);
      };
      $scope.createTodo = function() {
        return Todo.create({}, function(todo) {
          app.tracker.sendEvent('Todos', 'Create todo', '');
          return $scope.todos.push(todo);
        });
      };
      $scope.updateTodo = function(todo, callback, createNotification) {
        var loadingNotification;
        if (callback == null) {
          callback = null;
        }
        if (createNotification == null) {
          createNotification = true;
        }
        if (createNotification) {
          loadingNotification = todo.notifier().add('Сохраняется...', 'loading');
        }
        return todo.update(function(todoData) {
          app.tracker.sendEvent('Todos', 'Update todo', createNotification ? "with notification" : "without notification");
          if (createNotification) {
            loadingNotification.remove();
            todo.notifier().add('Сохранено', 'standart', $scope, 1000);
          }
          if (callback != null) {
            return callback(todoData);
          }
        });
      };
      return $scope.removeTodo = function(todo) {
        todo.remove();
        app.tracker.sendEvent('Todos', 'Remove todo', '');
        return _removeItem($scope.todos, todo);
      };
    }
  ]);

  exports = todoControllers;

}).call(this);

/*
//@ sourceMappingURL=todo.map
*/
