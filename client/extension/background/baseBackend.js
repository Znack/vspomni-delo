// Generated by CoffeeScript 1.6.3
(function() {
  var BaseBackend;

  BaseBackend = (function() {
    function BaseBackend() {}

    BaseBackend.prototype.handle = function(request, sendResponse) {
      if (request.method in this) {
        if (typeof this[request.method] === "function") {
          return this[request.method](request, sendResponse);
        } else {
          return sendResponse(this[request.method]);
        }
      }
      this.app.tracker.sendEvent('Error in extension', 'Background doesn\'t recognize backend\'s method', "backendName: " + request.backendName + ", backendMethod: " + request.method);
      return sendResponse(void 0);
    };

    BaseBackend.prototype.connect = function(params) {
      var callback, doCallOtherDomain, e, method, requestParams, url;
      url = params.url;
      callback = params.callback || function() {};
      method = params.method || "GET";
      requestParams = params.data || "";
      doCallOtherDomain = function() {
        var XHR, xhr;
        XHR = window.XDomainRequest || window.XMLHttpRequest;
        xhr = new XHR();
        xhr.open(method, url, true);
        xhr.setRequestHeader("Content-type", "application/json");
        xhr.onload = function() {
          var response;
          response = JSON.parse(this.responseText);
          if (response.status && response.status === 'error') {
            callback(new Error("Вы не авторизованы"), null);
          }
          return callback(null, response);
        };
        xhr.onerror = function() {
          return callback(new Error("Ошибка соединения"), null);
        };
        xhr.withCredentials = true;
        if (requestParams) {
          return xhr.send(JSON.stringify(requestParams));
        } else {
          return xhr.send();
        }
      };
      try {
        return doCallOtherDomain();
      } catch (_error) {
        e = _error;
        return callback(new Error("В этом браузере вы не можете загрузить окно"), null);
      }
    };

    return BaseBackend;

  })();

  module.exports = BaseBackend;

}).call(this);

/*
//@ sourceMappingURL=baseBackend.map
*/
