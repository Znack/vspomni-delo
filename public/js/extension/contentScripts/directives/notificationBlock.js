// Generated by CoffeeScript 1.6.3
(function() {
  var ICONS_OF_TYPES, Notification, notificationBlockDirective;

  notificationBlockDirective = angular.module('notificationBlockDirective', []);

  ICONS_OF_TYPES = {
    standart: "standart.png",
    save: "save.png",
    loading: "loading.gif"
  };

  Notification = (function() {
    function Notification(scope, element, attrs) {
      this.scope = scope;
      this.element = element;
      this.attrs = attrs;
      this._notifications = [];
    }

    Notification.prototype.createNotificationObject = function(text, type) {
      var notificationObject;
      notificationObject = {
        text: text
      };
      if (type in ICONS_OF_TYPES) {
        notificationObject.type = type;
        notificationObject.iconUrl = ICONS_OF_TYPES[type];
      } else {
        notificationObject.type = void 0;
        notificationObject.iconUrl = null;
      }
      return notificationObject;
    };

    Notification.prototype.add = function(text, type, timeout) {
      if (type == null) {
        type = 'note';
      }
      if (timeout == null) {
        timeout = null;
      }
      return this._notifications.push(this.createNotificationObject(text, type));
    };

    Notification.prototype.all = function() {
      return this._notifications;
    };

    return Notification;

  })();

  notificationBlockDirective.directive('notificationBlock', [
    function() {
      return {
        restrict: 'A',
        scope: {
          instance: "=notificationBlock"
        },
        link: function(scope, element, attrs) {
          var notification;
          notification = new Notification(scope, element, attrs);
          scope.instance.notifier = function() {
            return notification;
          };
          notification.add('first note', 'standart');
          return notification.add('loading note', 'loading');
        }
      };
    }
  ]);

  module.exports = notificationBlockDirective;

}).call(this);
