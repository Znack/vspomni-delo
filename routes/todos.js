// Generated by CoffeeScript 1.6.3
(function() {
  var HttpError, Todo;

  Todo = require('models/todo').Todo;

  HttpError = require('error/index').HttpError;

  exports.get = function(req, res, next) {
    var todos;
    todos = [];
    if (req.user) {
      return Todo.list(req.user, function(err, todos) {
        if (err) {
          return next(err);
        }
        return res.json(todos);
      });
    } else {
      return next(new HttpError(403));
    }
  };

  exports.listOfRemoved = function(req, res, next) {
    var todos;
    todos = [];
    if (req.user) {
      return Todo.listOfRemoved(req.user, function(err, todos) {
        if (err) {
          return next(err);
        }
        return res.json(todos);
      });
    } else {
      return next(new HttpError(403));
    }
  };

  exports.put = function(req, res, next) {
    if (req.user && req.body) {
      return Todo.create({
        title: req.body.title,
        author: req.user,
        deadLine: req.body.deadLine
      }, function(err, todo) {
        if (err) {
          return next(err);
        }
        return res.json(todo);
      });
    } else {
      return res.json({
        status: 'error',
        err: "Invalid request"
      });
    }
  };

  exports.post = function(req, res, next) {
    if (req.user && req.body["_id"] && req.params['todoId']) {
      return Todo.update(req.body, function(err, todo) {
        if (err) {
          return next(err);
        }
        return res.json(todo);
      });
    } else {
      return res.json({
        status: 'error',
        err: "Invalid request"
      });
    }
  };

  exports["delete"] = function(req, res, next) {
    if (req.user && req.params['todoId']) {
      return Todo["delete"](req.params['todoId'], function(err, status) {
        if (err) {
          return next(err);
        }
        return res.json({
          status: status
        });
      });
    } else {
      return next(new HttpError(404));
    }
  };

}).call(this);

/*
//@ sourceMappingURL=todos.map
*/
