(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by CoffeeScript 1.6.3
(function() {
  var AngularBackend, BaseBackend,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BaseBackend = require('./baseBackend.js');

  AngularBackend = (function(_super) {
    __extends(AngularBackend, _super);

    function AngularBackend(app) {
      this.app = app;
    }

    AngularBackend.prototype.getFrameTemplate = function(request, sendResponse) {
      var frameTemplate;
      frameTemplate = document.getElementById('frame-template');
      return sendResponse({
        template: frameTemplate.innerHTML
      });
    };

    return AngularBackend;

  })(BaseBackend);

  module.exports = AngularBackend;

}).call(this);

},{"./baseBackend.js":4}],2:[function(require,module,exports){
// Generated by CoffeeScript 1.6.3
(function() {
  var AuthBackend, BaseBackend, NotificationBackend, config,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  config = require('../common.js').config;

  BaseBackend = require('./baseBackend.js');

  NotificationBackend = require('./notificationBackend.js');

  AuthBackend = (function(_super) {
    __extends(AuthBackend, _super);

    function AuthBackend(app) {
      this.app = app;
      this.checkAuth = __bind(this.checkAuth, this);
      this._notificationBackend = new NotificationBackend();
    }

    AuthBackend.prototype.getCookie = function(request, sendResponse) {
      chrome.cookies.get({
        url: config.site.url,
        name: "sid"
      }, function(cookie) {
        return sendResponse({
          cookie: cookie
        });
      });
      return true;
    };

    AuthBackend.prototype.checkAuth = function(request, sendResponse) {
      var _this = this;
      this.connect({
        url: "" + config.site.url + "/api/users/current",
        callback: function(err, response) {
          if (err) {
            _this._notificationBackend.create({
              params: {
                type: "basic",
                title: "Вспомни Дело — вы не авторизованы",
                message: "Нажмите на иконку расширения и авторизуйтесь",
                iconUrl: "img/128x128.png",
                notificationName: "anonimousNotification"
              }
            });
            return sendResponse({
              user: null
            });
          }
          return sendResponse({
            user: response
          });
        }
      });
      return true;
    };

    return AuthBackend;

  })(BaseBackend);

  module.exports = AuthBackend;

}).call(this);

},{"../common.js":7,"./baseBackend.js":4,"./notificationBackend.js":6}],3:[function(require,module,exports){
// Generated by CoffeeScript 1.6.3
(function() {
  var AngularBackend, AuthBackend, EmitterBackend, NotificationBackend, app, backends, config;

  AngularBackend = require('./angularBackend.js');

  AuthBackend = require('./authBackend.js');

  EmitterBackend = require('./emitterBackend.js');

  NotificationBackend = require('./notificationBackend.js');

  config = require('../common.js').config;

  app = {
    config: config,
    service: analytics.getService('chrome_extension')
  };

  app.tracker = app.service.getTracker('UA-54177324-2');

  app.tracker.sendAppView('Background');

  chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {
    if (request.backendName in backends) {
      app.tracker.sendEvent('Background', 'Backend was launched', "backendName: " + request.backendName + ", backendMethod: " + request.method);
      return backends[request.backendName].handle(request, sendResponse);
    }
    return app.tracker.sendEvent('Error in extension', 'Background doesn\'t recognize backend', "backendName: " + request.backendName + ", backendMethod: " + request.method);
  });

  backends = {
    angularBackend: new AngularBackend(app),
    authBackend: new AuthBackend(app),
    emitterBackend: new EmitterBackend(app),
    notificationBackend: new NotificationBackend(app)
  };

}).call(this);

},{"../common.js":7,"./angularBackend.js":1,"./authBackend.js":2,"./emitterBackend.js":5,"./notificationBackend.js":6}],4:[function(require,module,exports){
// Generated by CoffeeScript 1.6.3
(function() {
  var BaseBackend;

  BaseBackend = (function() {
    function BaseBackend() {}

    BaseBackend.prototype.handle = function(request, sendResponse) {
      if (request.method in this) {
        if (typeof this[request.method] === "function") {
          return this[request.method](request, sendResponse);
        } else {
          return sendResponse(this[request.method]);
        }
      }
      this.app.tracker.sendEvent('Error in extension', 'Background doesn\'t recognize backend\'s method', "backendName: " + request.backendName + ", backendMethod: " + request.method);
      return sendResponse(void 0);
    };

    BaseBackend.prototype.connect = function(params) {
      var callback, doCallOtherDomain, e, method, requestParams, url;
      url = params.url;
      callback = params.callback || function() {};
      method = params.method || "GET";
      requestParams = params.data || "";
      doCallOtherDomain = function() {
        var XHR, xhr;
        XHR = window.XDomainRequest || window.XMLHttpRequest;
        xhr = new XHR();
        xhr.open(method, url, true);
        xhr.setRequestHeader("Content-type", "application/json");
        xhr.onload = function() {
          var response;
          response = JSON.parse(this.responseText);
          if (response.status && response.status === 'error') {
            callback(new Error("Вы не авторизованы"), null);
          }
          return callback(null, response);
        };
        xhr.onerror = function() {
          return callback(new Error("Ошибка соединения"), null);
        };
        xhr.withCredentials = true;
        if (requestParams) {
          return xhr.send(JSON.stringify(requestParams));
        } else {
          return xhr.send();
        }
      };
      try {
        return doCallOtherDomain();
      } catch (_error) {
        e = _error;
        return callback(new Error("В этом браузере вы не можете загрузить окно"), null);
      }
    };

    return BaseBackend;

  })();

  module.exports = BaseBackend;

}).call(this);

},{}],5:[function(require,module,exports){
// Generated by CoffeeScript 1.6.3
(function() {
  var BaseBackend, EmitterBackend, config,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  config = require('../common.js').config;

  BaseBackend = require('./baseBackend.js');

  EmitterBackend = (function(_super) {
    __extends(EmitterBackend, _super);

    function EmitterBackend(app) {
      this.app = app;
    }

    EmitterBackend.prototype.createTodo = function(request, sendResponse) {
      this.connect({
        url: "" + config.site.url + "/todos/",
        method: "PUT"
      });
      return true;
    };

    EmitterBackend.prototype.getTemplateForAnonymous = function(request, sendResponse) {
      var templateForAnonymous;
      templateForAnonymous = document.getElementById('anonymous-template');
      return sendResponse({
        template: templateForAnonymous.innerHTML
      });
    };

    return EmitterBackend;

  })(BaseBackend);

  module.exports = EmitterBackend;

}).call(this);

},{"../common.js":7,"./baseBackend.js":4}],6:[function(require,module,exports){
// Generated by CoffeeScript 1.6.3
(function() {
  var BaseBackend, NotificationBackend,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BaseBackend = require('./baseBackend.js');

  NotificationBackend = (function(_super) {
    __extends(NotificationBackend, _super);

    function NotificationBackend(app) {
      this.app = app;
      this.create = __bind(this.create, this);
      this._notifications = {};
      this._notificationCounter = 0;
    }

    NotificationBackend.prototype.create = function(request, sendResponse) {
      var notificationSettings, now, opt;
      opt = {};
      notificationSettings = {};
      opt.type = request.params.type || "basic";
      opt.title = request.params.title || "-";
      opt.message = request.params.message || "-";
      opt.iconUrl = request.params.iconUrl || "img/128x128.png";
      notificationSettings.interval = request.params.notificationInterval || 3600000;
      now = new Date();
      notificationSettings.name = request.params.notificationName || ("note" + this._notificationCounter);
      if (!this._notifications[notificationSettings.name]) {
        this._notifications[notificationSettings.name] = {
          lastTime: now
        };
      }
      if (this._notifications[notificationSettings.name].lastTime.getTime() + notificationSettings.interval < now) {
        this._notifications[notificationSettings.name].lastTime = now;
      }
      if (this._notifications[notificationSettings.name].lastTime === now) {
        this._notificationCounter += 1;
        chrome.notifications.create(notificationSettings.name, opt, function() {});
        setTimeout(function() {
          return chrome.notifications.clear(notificationSettings.name, function() {});
        }, 5000);
      }
      return this.app.tracker.sendEvent('Background', 'notification was showed', opt.title);
    };

    return NotificationBackend;

  })(BaseBackend);

  module.exports = NotificationBackend;

}).call(this);

},{"./baseBackend.js":4}],7:[function(require,module,exports){
// Generated by CoffeeScript 1.6.3
(function() {
  module.exports.config = {
    site: {
      url: "http://vspomni-delo.ru",
      title: "Вспомни дело"
    },
    vk: {
      id: "4412700"
    }
  };

}).call(this);

},{}]},{},[3])